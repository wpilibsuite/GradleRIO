plugins {
    id 'com.gradle.plugin-publish' version '0.12.0'
    id 'java-gradle-plugin'
    id 'idea'
    id 'maven-publish'
    id 'java'
    id 'groovy'
}

repositories {
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    mavenLocal()
}

dependencies {
    api 'com.google.code.gson:gson:2.8.6'

    api 'edu.wpi.first:native-utils:2022.7.1'

    api 'de.undercouch:gradle-download-task:4.1.2'

    testImplementation('org.spockframework:spock-core:2.0-M4-groovy-3.0') {
        exclude group: 'org.codehaus.groovy'
    }
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    testImplementation gradleTestKit()
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

archivesBaseName = "GradleRIO"

sourceCompatibility = 11
targetCompatibility = 11

allprojects {
    group = "edu.wpi.first"

    if (project.hasProperty('publishVersion')) {
        version = project.publishVersion
    }
}

pluginBundle {
    website = 'https://github.com/wpilibsuite/GradleRIO'
    vcsUrl = 'https://github.com/wpilibsuite/GradleRIO'
    description = 'Managing FRC projects, the Gradle way (2019+)'
    tags = ['frc', 'wpilib', 'gradlerio']
}

gradlePlugin {
    plugins {
        gradleRio {
            id = 'edu.wpi.first.GradleRIO'
            displayName = 'GradleRIO'
            implementationClass = 'edu.wpi.first.gradlerio.GradleRIOPlugin'
        }
    }
}

apply from: 'versionupdates.gradle'

def examplesFolder = file("$rootDir/examples")

tasks.register('PatchExamples') {
    doLast {
        String regex = "(id\\s*?[\\\"|\\']edu\\.wpi\\.first\\.GradleRIO[\\\"|\\'].*?version\\s*?[\\\"|\\'])(.+?)([\\\"|\\'])";

        examplesFolder.eachFile { File file ->
            if (file.isDirectory() && file.name != '_archived') {
                def buildGradleFile = new File(file, 'build.gradle')
                if (buildGradleFile.exists() && buildGradleFile.isFile()) {
                    def text = buildGradleFile.text
                    text = text.replaceAll(regex, "id \"edu.wpi.first.GradleRIO\" version \"${version}\"")
                    buildGradleFile.text = text
                }
            }
        }
    }
}

task zipExamples(dependsOn: PatchExamples)

examplesFolder.eachFile { File file ->
    if (file.isDirectory() && file.name != '_archived') {
        task "zipExample${file.name}"(type: Zip) {
            from(file) {
                archiveFileName = "${file.name}.zip"
                exclude 'build/'
                exclude '.gradle/'
            }

            zipExamples.dependsOn it
            it.dependsOn PatchExamples
        }
    }
}

jar.finalizedBy zipExamples

wrapper {
    gradleVersion = '7.3.3'
    distributionType = Wrapper.DistributionType.BIN
}
